---

- name: Gather information from target instance
  community.aws.ec2_instance_info:
    aws_access_key: "{{ inject.aws_access_key | default(omit) }}"
    aws_secret_key: "{{ inject.aws_secret_key | default(omit) }}"
    security_token: "{{ ansible_env.AWS_SESSION_TOKEN | default(omit) }}"
    region: "{{ inject.region | default(omit) }}"
    ec2_url: '{{ aws_ec2_url | default(omit) }}'
    validate_certs: '{{ aws_ssl_enabled }}'
    filters:
      "tag:task": '{{ instance_tag }}'
  register: donor_instances_info
  delegate_to: 127.0.0.1
  delegate_facts: true

- name: donor | Gather the details related to the instance
  ansible.builtin.set_fact:
    donor_conf_dict: {
    'az': "{{ item.1.placement.availability_zone }}",
    'key': "{{ item.1.key_name }}",
    'ip_address': "{{ item.1.private_ip_address }}",
    'subnet_id': "{{ item.1.subnet_id }}",
    'instance_id': "{{ item.1.instance_id }}",
    'root_volume_device_name': "{{ item.1.root_device_name }}",
    # 'security_groups': "{{ item.1.security_groups }}",
    # 'tags': "{{ item.1.tags }}",
    # 'id': "{{ item.1.instance_id }}",
    # 'type': "{{ item.1.instance_type }}",
    # 'block_device_mappings': "{{ item.1.block_device_mappings }}",
    # 'root_volume_id': "{{ item.1.block_device_mappings }} | community.general.json_query('[?device_name == `/dev/sda1`].ebs.volume_id | [-1]') }}",
    # 'root_volume_device_name': "{{ item.1.block_device_mappings | community.general.json_query('[?device_name == `/dev/sda1`].device_name | [-1]') }}"
    }
  run_once: true
  register: donor_config_dict
  delegate_to: 127.0.0.1
  with_indexed_items: "{{ donor_instances_info.instances }}"

