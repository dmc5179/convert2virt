---

- name: Show block device mappings
  debug:
    var: block_device

- name: "Gather vol {{ block_device.ebs.volume_id }} info"
  delegate_to: localhost
  amazon.aws.ec2_vol_info:
    aws_access_key: "{{ ansible_env.AWS_ACCESS_KEY_ID | default(omit) }}"
    aws_secret_key: "{{ ansible_env.AWS_SECRET_ACCESS_KEY | default(omit) }}"
    security_token: "{{ ansible_env.AWS_SESSION_TOKEN | default(omit) }}"
    region: "{{ ansible_env.AWS_DEFAULT_REGION | default(omit) }}"
    ec2_url: '{{ aws_ec2_url | default(omit) }}'
    validate_certs: '{{ aws_ssl_enabled }}'
    filters:
      volume-id: '{{ block_device.ebs.volume_id }}'
  register: donor_volume

- name: Show vol info
  debug:
    var: donor_volume

- name: "Create Snapshot of {{ infra_instance }} vol: {{ block_device.ebs.volume_id }}" 
  delegate_to: localhost
  amazon.aws.ec2_snapshot:
    aws_access_key: "{{ ansible_env.AWS_ACCESS_KEY_ID | default(omit) }}"
    aws_secret_key: "{{ ansible_env.AWS_SECRET_ACCESS_KEY | default(omit) }}"
    security_token: "{{ ansible_env.AWS_SESSION_TOKEN | default(omit) }}"
    region: "{{ ansible_env.AWS_DEFAULT_REGION | default(omit) }}"
    ec2_url: '{{ aws_ec2_url | default(omit) }}'
    validate_certs: '{{ aws_ssl_enabled }}'
    volume_id: '{{ block_device.ebs.volume_id }}'
    last_snapshot_min_age: 120
    description: "Snapshot of {{ block_device.ebs.volume_id }} destined for kubevirt {{ infra_instance }}"
    snapshot_tags:
      Name: "Snapshot of {{ block_device.ebs.volume_id }} destined for kubevirt {{ infra_instance }}"
    wait: yes
    wait_timeout: 7200
  register: donor_snapshot

  # This only supports an instance with the main root volume
- name: Add snapshot to the main list
  set_fact:
    my_snaps: {
    'device': "{{ block_device.device_name }}",
    'snapshot_id': "{{ donor_snapshot.snapshot_id }}"
    }

- name: "Create volume for {{ donor_snapshot.snapshot_id }}"
  delegate_to: localhost
  amazon.aws.ec2_vol:
    aws_access_key: "{{ ansible_env.AWS_ACCESS_KEY_ID | default(omit) }}"
    aws_secret_key: "{{ ansible_env.AWS_SECRET_ACCESS_KEY | default(omit) }}"
    security_token: "{{ ansible_env.AWS_SESSION_TOKEN | default(omit) }}"
    region: "{{ ansible_env.AWS_DEFAULT_REGION | default(omit) }}"
    ec2_url: '{{ aws_ec2_url | default(omit) }}'
    validate_certs: '{{ aws_ssl_enabled }}'
    snapshot: '{{ donor_snapshot.snapshot_id }}'
    volume_type: '{{ donor_volume.volumes[0].type }}'
    volume_size: '{{ donor_snapshot.volume_size }}'
    zone: "{{ infra_instance_info.instances[0].placement.availability_zone }}"
    tags: '{{ donor_snapshot.tags }}'
  register: my_vol

  # This only supports an instance with the main root volume
- name: Add volume to the main list
  set_fact:
    my_vols: {
    'device': "{{ block_device.device_name }}",
    'volume_id': "{{ my_vol.volume_id }}"
    }
